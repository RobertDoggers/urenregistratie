{"ast":null,"code":"import { format, startOfWeek, endOfWeek, parseISO } from 'date-fns';\nimport { nl } from 'date-fns/locale';\nexport const calculationService = {\n  getWeekOverview(date, entries) {\n    const parsedDate = parseISO(date);\n    const weekStart = startOfWeek(parsedDate, {\n      locale: nl\n    });\n    const weekEnd = endOfWeek(parsedDate, {\n      locale: nl\n    });\n    const weekEntries = entries.filter(entry => {\n      const entryDate = parseISO(entry.date);\n      return entryDate >= weekStart && entryDate <= weekEnd;\n    });\n    const totalHours = weekEntries.reduce((sum, entry) => sum + entry.hours, 0);\n    return {\n      weekNumber: parseInt(format(parsedDate, 'w', {\n        locale: nl\n      })),\n      year: parsedDate.getFullYear(),\n      totalHours,\n      entries: weekEntries\n    };\n  },\n  getTaskOverview(taskId, entries) {\n    const taskEntries = entries.filter(entry => entry.taskId === taskId);\n    const totalHours = taskEntries.reduce((sum, entry) => sum + entry.hours, 0);\n    return {\n      taskId,\n      totalHours,\n      entries: taskEntries\n    };\n  },\n  getTotalHoursForDate(date, entries) {\n    return entries.filter(entry => entry.date === date).reduce((sum, entry) => sum + entry.hours, 0);\n  },\n  getTotalHoursForTask(taskId, entries) {\n    return entries.filter(entry => entry.taskId === taskId).reduce((sum, entry) => sum + entry.hours, 0);\n  }\n};","map":{"version":3,"names":["format","startOfWeek","endOfWeek","parseISO","nl","calculationService","getWeekOverview","date","entries","parsedDate","weekStart","locale","weekEnd","weekEntries","filter","entry","entryDate","totalHours","reduce","sum","hours","weekNumber","parseInt","year","getFullYear","getTaskOverview","taskId","taskEntries","getTotalHoursForDate","getTotalHoursForTask"],"sources":["/Users/robert.doggers/Desktop/Urenregistratie/src/services/calculationService.ts"],"sourcesContent":["import { TimeEntry, WeekOverview, TaskOverview } from '../types';\nimport { format, startOfWeek, endOfWeek, parseISO } from 'date-fns';\nimport { nl } from 'date-fns/locale';\n\nexport const calculationService = {\n  getWeekOverview(date: string, entries: TimeEntry[]): WeekOverview {\n    const parsedDate = parseISO(date);\n    const weekStart = startOfWeek(parsedDate, { locale: nl });\n    const weekEnd = endOfWeek(parsedDate, { locale: nl });\n    \n    const weekEntries = entries.filter(entry => {\n      const entryDate = parseISO(entry.date);\n      return entryDate >= weekStart && entryDate <= weekEnd;\n    });\n    \n    const totalHours = weekEntries.reduce((sum, entry) => sum + entry.hours, 0);\n    \n    return {\n      weekNumber: parseInt(format(parsedDate, 'w', { locale: nl })),\n      year: parsedDate.getFullYear(),\n      totalHours,\n      entries: weekEntries\n    };\n  },\n  \n  getTaskOverview(taskId: string, entries: TimeEntry[]): TaskOverview {\n    const taskEntries = entries.filter(entry => entry.taskId === taskId);\n    const totalHours = taskEntries.reduce((sum, entry) => sum + entry.hours, 0);\n    \n    return {\n      taskId,\n      totalHours,\n      entries: taskEntries\n    };\n  },\n  \n  getTotalHoursForDate(date: string, entries: TimeEntry[]): number {\n    return entries\n      .filter(entry => entry.date === date)\n      .reduce((sum, entry) => sum + entry.hours, 0);\n  },\n  \n  getTotalHoursForTask(taskId: string, entries: TimeEntry[]): number {\n    return entries\n      .filter(entry => entry.taskId === taskId)\n      .reduce((sum, entry) => sum + entry.hours, 0);\n  }\n}; "],"mappings":"AACA,SAASA,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,UAAU;AACnE,SAASC,EAAE,QAAQ,iBAAiB;AAEpC,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,eAAeA,CAACC,IAAY,EAAEC,OAAoB,EAAgB;IAChE,MAAMC,UAAU,GAAGN,QAAQ,CAACI,IAAI,CAAC;IACjC,MAAMG,SAAS,GAAGT,WAAW,CAACQ,UAAU,EAAE;MAAEE,MAAM,EAAEP;IAAG,CAAC,CAAC;IACzD,MAAMQ,OAAO,GAAGV,SAAS,CAACO,UAAU,EAAE;MAAEE,MAAM,EAAEP;IAAG,CAAC,CAAC;IAErD,MAAMS,WAAW,GAAGL,OAAO,CAACM,MAAM,CAACC,KAAK,IAAI;MAC1C,MAAMC,SAAS,GAAGb,QAAQ,CAACY,KAAK,CAACR,IAAI,CAAC;MACtC,OAAOS,SAAS,IAAIN,SAAS,IAAIM,SAAS,IAAIJ,OAAO;IACvD,CAAC,CAAC;IAEF,MAAMK,UAAU,GAAGJ,WAAW,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEJ,KAAK,KAAKI,GAAG,GAAGJ,KAAK,CAACK,KAAK,EAAE,CAAC,CAAC;IAE3E,OAAO;MACLC,UAAU,EAAEC,QAAQ,CAACtB,MAAM,CAACS,UAAU,EAAE,GAAG,EAAE;QAAEE,MAAM,EAAEP;MAAG,CAAC,CAAC,CAAC;MAC7DmB,IAAI,EAAEd,UAAU,CAACe,WAAW,CAAC,CAAC;MAC9BP,UAAU;MACVT,OAAO,EAAEK;IACX,CAAC;EACH,CAAC;EAEDY,eAAeA,CAACC,MAAc,EAAElB,OAAoB,EAAgB;IAClE,MAAMmB,WAAW,GAAGnB,OAAO,CAACM,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACW,MAAM,KAAKA,MAAM,CAAC;IACpE,MAAMT,UAAU,GAAGU,WAAW,CAACT,MAAM,CAAC,CAACC,GAAG,EAAEJ,KAAK,KAAKI,GAAG,GAAGJ,KAAK,CAACK,KAAK,EAAE,CAAC,CAAC;IAE3E,OAAO;MACLM,MAAM;MACNT,UAAU;MACVT,OAAO,EAAEmB;IACX,CAAC;EACH,CAAC;EAEDC,oBAAoBA,CAACrB,IAAY,EAAEC,OAAoB,EAAU;IAC/D,OAAOA,OAAO,CACXM,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACR,IAAI,KAAKA,IAAI,CAAC,CACpCW,MAAM,CAAC,CAACC,GAAG,EAAEJ,KAAK,KAAKI,GAAG,GAAGJ,KAAK,CAACK,KAAK,EAAE,CAAC,CAAC;EACjD,CAAC;EAEDS,oBAAoBA,CAACH,MAAc,EAAElB,OAAoB,EAAU;IACjE,OAAOA,OAAO,CACXM,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACW,MAAM,KAAKA,MAAM,CAAC,CACxCR,MAAM,CAAC,CAACC,GAAG,EAAEJ,KAAK,KAAKI,GAAG,GAAGJ,KAAK,CAACK,KAAK,EAAE,CAAC,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}