{"ast":null,"code":"var _jsxFileName = \"/Users/robert.doggers/Desktop/Urenregistratie/src/components/TimeRegistrationComponent.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Button, TextField, Select, MenuItem, FormControl, InputLabel, Grid, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Notifications as NotificationsIcon } from '@mui/icons-material';\nimport { storageService } from '../services/storageService';\nimport { excelService } from '../services/excelService';\nimport { calculationService } from '../services/calculationService';\nimport { notificationService } from '../services/notificationService';\nimport { WeekOverview } from './WeekOverview';\nimport { TaskOverview } from './TaskOverview';\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, children));\n}\nconst TimeRegistration = () => {\n  const [tasks, setTasks] = useState([]);\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedTask, setSelectedTask] = useState('');\n  const [hours, setHours] = useState('');\n  const [notes, setNotes] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [tabValue, setTabValue] = useState(0);\n  const [reminderTime, setReminderTime] = useState('17:00');\n  useEffect(() => {\n    const data = storageService.getAllData();\n    setTasks(data.tasks);\n    setTimeEntries(data.timeEntries);\n  }, []);\n  const handleAddEntry = () => {\n    if (!selectedTask || !hours) return;\n    const newEntry = {\n      id: `entry-${Date.now()}`,\n      taskId: selectedTask,\n      date: selectedDate,\n      hours: parseFloat(hours),\n      notes: notes || undefined\n    };\n    const updatedEntries = [...timeEntries, newEntry];\n    setTimeEntries(updatedEntries);\n    storageService.saveTimeEntries(updatedEntries);\n    setSelectedTask('');\n    setHours('');\n    setNotes('');\n  };\n  const handleDeleteEntry = entryId => {\n    const updatedEntries = timeEntries.filter(entry => entry.id !== entryId);\n    setTimeEntries(updatedEntries);\n    storageService.saveTimeEntries(updatedEntries);\n  };\n  const handleAddTask = () => {\n    if (!newTaskName) return;\n    const newTask = {\n      id: `task-${Date.now()}`,\n      name: newTaskName\n    };\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    storageService.saveTasks(updatedTasks);\n    setNewTaskName('');\n    setOpenDialog(false);\n  };\n  const handleFileImport = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    try {\n      const data = await excelService.importExcel(file);\n      setTasks(data.tasks);\n      setTimeEntries(data.timeEntries);\n      storageService.saveAllData(data);\n    } catch (error) {\n      console.error('Error importing Excel file:', error);\n    }\n  };\n  const handleExport = async () => {\n    try {\n      const data = storageService.getAllData();\n      const blob = await excelService.exportToExcel(data);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'urenregistratie.xlsx';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error exporting to Excel:', error);\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const handleReminderChange = async event => {\n    const newTime = event.target.value;\n    setReminderTime(newTime);\n    await notificationService.cancelReminders();\n    await notificationService.scheduleReminder(newTime);\n  };\n  const weekOverview = calculationService.getWeekOverview(selectedDate, timeEntries);\n  const selectedTaskOverview = selectedTask ? calculationService.getTaskOverview(selectedTask, timeEntries) : null;\n  const selectedTaskData = tasks.find(t => t.id === selectedTask);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Urenregistratie\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx,.xls\",\n    onChange: handleFileImport,\n    style: {\n      display: 'none'\n    },\n    id: \"excel-import\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"excel-import\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Importeer Excel\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleExport,\n    sx: {\n      ml: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Exporteer naar Excel\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    label: \"Datum\",\n    value: selectedDate,\n    onChange: e => setSelectedDate(e.target.value),\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, \"Taak\"), /*#__PURE__*/React.createElement(Select, {\n    value: selectedTask,\n    onChange: e => setSelectedTask(e.target.value),\n    label: \"Taak\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(MenuItem, {\n    key: task.id,\n    value: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, task.name))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"number\",\n    label: \"Uren\",\n    value: hours,\n    onChange: e => setHours(e.target.value),\n    inputProps: {\n      min: 0,\n      step: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Notities\",\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    multiline: true,\n    rows: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 26\n      }\n    }),\n    onClick: handleAddEntry,\n    disabled: !selectedTask || !hours,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Voeg uren toe\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => setOpenDialog(true),\n    sx: {\n      ml: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 2,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    sx: {\n      mr: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"time\",\n    label: \"Herinnering\",\n    value: reminderTime,\n    onChange: handleReminderChange,\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Dagoverzicht\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Weekoverzicht\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Taakoverzicht\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, \"Ingevoerde uren\"), timeEntries.filter(entry => entry.date === selectedDate).map(entry => {\n    const task = tasks.find(t => t.id === entry.taskId);\n    return /*#__PURE__*/React.createElement(Box, {\n      key: entry.id,\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        mb: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, task === null || task === void 0 ? void 0 : task.name, \": \", entry.hours, \" uur\"), entry.notes && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 27\n      }\n    }, entry.notes)), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: () => handleDeleteEntry(entry.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WeekOverview, {\n    weekOverview: weekOverview,\n    tasks: tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, selectedTaskOverview && selectedTaskData ? /*#__PURE__*/React.createElement(TaskOverview, {\n    taskOverview: selectedTaskOverview,\n    task: selectedTaskData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, \"Selecteer een taak om het overzicht te zien\"))))), /*#__PURE__*/React.createElement(Dialog, {\n    open: openDialog,\n    onClose: () => setOpenDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, \"Nieuwe taak toevoegen\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Taaknaam\",\n    fullWidth: true,\n    value: newTaskName,\n    onChange: e => setNewTaskName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setOpenDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, \"Annuleren\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddTask,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, \"Toevoegen\"))));\n};\nexport default TimeRegistration;","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Button","TextField","Select","MenuItem","FormControl","InputLabel","Grid","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","Add","AddIcon","Delete","DeleteIcon","Notifications","NotificationsIcon","storageService","excelService","calculationService","notificationService","WeekOverview","TaskOverview","TabPanel","props","children","value","index","other","createElement","Object","assign","role","hidden","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","TimeRegistration","tasks","setTasks","timeEntries","setTimeEntries","selectedDate","setSelectedDate","Date","toISOString","split","selectedTask","setSelectedTask","hours","setHours","notes","setNotes","openDialog","setOpenDialog","newTaskName","setNewTaskName","tabValue","setTabValue","reminderTime","setReminderTime","data","getAllData","handleAddEntry","newEntry","now","taskId","date","parseFloat","undefined","updatedEntries","saveTimeEntries","handleDeleteEntry","entryId","filter","entry","handleAddTask","newTask","name","updatedTasks","saveTasks","handleFileImport","event","_event$target$files","file","target","files","importExcel","saveAllData","error","console","handleExport","blob","exportToExcel","url","window","URL","createObjectURL","a","document","href","download","click","revokeObjectURL","handleTabChange","newValue","handleReminderChange","newTime","cancelReminders","scheduleReminder","weekOverview","getWeekOverview","selectedTaskOverview","getTaskOverview","selectedTaskData","find","t","container","spacing","item","xs","variant","gutterBottom","mb","type","accept","onChange","style","display","htmlFor","component","onClick","ml","sm","fullWidth","label","e","InputLabelProps","shrink","map","task","key","inputProps","min","step","multiline","rows","startIcon","disabled","mt","alignItems","mr","size","width","justifyContent","color","taskOverview","open","onClose","autoFocus","margin"],"sources":["/Users/robert.doggers/Desktop/Urenregistratie/src/components/TimeRegistrationComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Grid,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Notifications as NotificationsIcon } from '@mui/icons-material';\nimport { Task, TimeEntry } from '../types';\nimport { storageService } from '../services/storageService';\nimport { excelService } from '../services/excelService';\nimport { calculationService } from '../services/calculationService';\nimport { notificationService } from '../services/notificationService';\nimport { WeekOverview } from './WeekOverview';\nimport { TaskOverview } from './TaskOverview';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst TimeRegistration: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [timeEntries, setTimeEntries] = useState<TimeEntry[]>([]);\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [selectedTask, setSelectedTask] = useState<string>('');\n  const [hours, setHours] = useState<string>('');\n  const [notes, setNotes] = useState<string>('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [tabValue, setTabValue] = useState(0);\n  const [reminderTime, setReminderTime] = useState<string>('17:00');\n\n  useEffect(() => {\n    const data = storageService.getAllData();\n    setTasks(data.tasks);\n    setTimeEntries(data.timeEntries);\n  }, []);\n\n  const handleAddEntry = () => {\n    if (!selectedTask || !hours) return;\n\n    const newEntry: TimeEntry = {\n      id: `entry-${Date.now()}`,\n      taskId: selectedTask,\n      date: selectedDate,\n      hours: parseFloat(hours),\n      notes: notes || undefined,\n    };\n\n    const updatedEntries = [...timeEntries, newEntry];\n    setTimeEntries(updatedEntries);\n    storageService.saveTimeEntries(updatedEntries);\n    \n    setSelectedTask('');\n    setHours('');\n    setNotes('');\n  };\n\n  const handleDeleteEntry = (entryId: string) => {\n    const updatedEntries = timeEntries.filter(entry => entry.id !== entryId);\n    setTimeEntries(updatedEntries);\n    storageService.saveTimeEntries(updatedEntries);\n  };\n\n  const handleAddTask = () => {\n    if (!newTaskName) return;\n\n    const newTask: Task = {\n      id: `task-${Date.now()}`,\n      name: newTaskName,\n    };\n\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    storageService.saveTasks(updatedTasks);\n    \n    setNewTaskName('');\n    setOpenDialog(false);\n  };\n\n  const handleFileImport = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    try {\n      const data = await excelService.importExcel(file);\n      setTasks(data.tasks);\n      setTimeEntries(data.timeEntries);\n      storageService.saveAllData(data);\n    } catch (error) {\n      console.error('Error importing Excel file:', error);\n    }\n  };\n\n  const handleExport = async () => {\n    try {\n      const data = storageService.getAllData();\n      const blob = await excelService.exportToExcel(data);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'urenregistratie.xlsx';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error exporting to Excel:', error);\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleReminderChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTime = event.target.value;\n    setReminderTime(newTime);\n    await notificationService.cancelReminders();\n    await notificationService.scheduleReminder(newTime);\n  };\n\n  const weekOverview = calculationService.getWeekOverview(selectedDate, timeEntries);\n  const selectedTaskOverview = selectedTask ? calculationService.getTaskOverview(selectedTask, timeEntries) : null;\n  const selectedTaskData = tasks.find(t => t.id === selectedTask);\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Urenregistratie\n            </Typography>\n            \n            <Box sx={{ mb: 3 }}>\n              <input\n                type=\"file\"\n                accept=\".xlsx,.xls\"\n                onChange={handleFileImport}\n                style={{ display: 'none' }}\n                id=\"excel-import\"\n              />\n              <label htmlFor=\"excel-import\">\n                <Button variant=\"contained\" component=\"span\">\n                  Importeer Excel\n                </Button>\n              </label>\n              <Button\n                variant=\"contained\"\n                onClick={handleExport}\n                sx={{ ml: 2 }}\n              >\n                Exporteer naar Excel\n              </Button>\n            </Box>\n\n            <Grid container spacing={2} sx={{ mb: 3 }}>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  label=\"Datum\"\n                  value={selectedDate}\n                  onChange={(e) => setSelectedDate(e.target.value)}\n                  InputLabelProps={{ shrink: true }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Taak</InputLabel>\n                  <Select\n                    value={selectedTask}\n                    onChange={(e) => setSelectedTask(e.target.value)}\n                    label=\"Taak\"\n                  >\n                    {tasks.map((task) => (\n                      <MenuItem key={task.id} value={task.id}>\n                        {task.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label=\"Uren\"\n                  value={hours}\n                  onChange={(e) => setHours(e.target.value)}\n                  inputProps={{ min: 0, step: 0.5 }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Notities\"\n                  value={notes}\n                  onChange={(e) => setNotes(e.target.value)}\n                  multiline\n                  rows={2}\n                />\n              </Grid>\n            </Grid>\n\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={handleAddEntry}\n              disabled={!selectedTask || !hours}\n            >\n              Voeg uren toe\n            </Button>\n\n            <IconButton\n              onClick={() => setOpenDialog(true)}\n              sx={{ ml: 2 }}\n            >\n              <AddIcon />\n            </IconButton>\n\n            <Box sx={{ mt: 2, display: 'flex', alignItems: 'center' }}>\n              <NotificationsIcon sx={{ mr: 1 }} />\n              <TextField\n                type=\"time\"\n                label=\"Herinnering\"\n                value={reminderTime}\n                onChange={handleReminderChange}\n                InputLabelProps={{ shrink: true }}\n                size=\"small\"\n              />\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper sx={{ width: '100%' }}>\n            <Tabs value={tabValue} onChange={handleTabChange}>\n              <Tab label=\"Dagoverzicht\" />\n              <Tab label=\"Weekoverzicht\" />\n              <Tab label=\"Taakoverzicht\" />\n            </Tabs>\n\n            <TabPanel value={tabValue} index={0}>\n              <Typography variant=\"h6\" gutterBottom>\n                Ingevoerde uren\n              </Typography>\n              {timeEntries\n                .filter(entry => entry.date === selectedDate)\n                .map(entry => {\n                  const task = tasks.find(t => t.id === entry.taskId);\n                  return (\n                    <Box\n                      key={entry.id}\n                      sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'space-between',\n                        mb: 1,\n                      }}\n                    >\n                      <Box>\n                        <Typography>\n                          {task?.name}: {entry.hours} uur\n                        </Typography>\n                        {entry.notes && (\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {entry.notes}\n                          </Typography>\n                        )}\n                      </Box>\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleDeleteEntry(entry.id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Box>\n                  );\n                })}\n            </TabPanel>\n\n            <TabPanel value={tabValue} index={1}>\n              <WeekOverview\n                weekOverview={weekOverview}\n                tasks={tasks}\n              />\n            </TabPanel>\n\n            <TabPanel value={tabValue} index={2}>\n              {selectedTaskOverview && selectedTaskData ? (\n                <TaskOverview\n                  taskOverview={selectedTaskOverview}\n                  task={selectedTaskData}\n                />\n              ) : (\n                <Typography>\n                  Selecteer een taak om het overzicht te zien\n                </Typography>\n              )}\n            </TabPanel>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle>Nieuwe taak toevoegen</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Taaknaam\"\n            fullWidth\n            value={newTaskName}\n            onChange={(e) => setNewTaskName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>Annuleren</Button>\n          <Button onClick={handleAddTask} variant=\"contained\">\n            Toevoegen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default TimeRegistration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}